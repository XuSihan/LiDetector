. AS IT RUNS IN DOCKER , IT CAN BUILD A NEW DATA STORE FROM SCRATCH EACH TIME ( SO YOU CAN USE ELASTICSEARCH , MONGODB , COUCHDB , OR WHATEVER YOU WANT , AND JUST TEST THAT THE API WORKS ) EASY PYTHON INTEGRATION WITH JUPYTER KERNELS FOR REMOTE OR IN-DOCKER DEVELOPMENT WITH EXTENSIONS LIKE ATOM HYDROGEN OR VISUAL STUDIO CODE JUPYTER VUE FRONTEND : GENERATED WITH VUE CLI JWT AUTHENTICATION HANDLING LOGIN VIEW AFTER LOGIN , MAIN DASHBOARD VIEW VUEX VUE-ROUTER VUETIFY FOR BEAUTIFUL MATERIAL DESIGN COMPONENTS TYPESCRIPT DOCKER SERVER BASED ON NGINX ( CONFIGURED TO PLAY NICELY WITH VUE-ROUTER ) DOCKER MULTI-STAGE BUILDING , SO YOU DON'T NEED TO SAVE OR COMMIT COMPILED CODE FRONTEND TESTS RAN AT BUILD TIME ( CAN BE DISABLED TOO ) MADE AS MODULAR AS POSSIBLE , SO IT WORKS OUT OF THE BOX , BUT YOU CAN RE-GENERATE WITH VUE CLI OR CREATE IT AS YOU NEED , AND RE-USE WHAT YOU WANT PGADMIN FOR POSTGRESQL DATABASE , YOU CAN MODIFY IT TO USE PHPMYADMIN AND MYSQL EASILY SWAGGER-UI FOR LIVE INTERACTIVE DOCUMENTATION FLOWER FOR CELERY JOBS MONITORING LOAD BALANCING BETWEEN FRONTEND AND BACKEND WITH TRAEFIK , SO YOU CAN HAVE BOTH UNDER THE SAME DOMAIN , SEPARATED BY PATH , BUT SERVED BY DIFFERENT CONTAINERS TRAEFIK INTEGRATION , INCLUDING LET'S ENCRYPT HTTPS CERTIFICATES AUTOMATIC GENERATION GITLAB CI ( CONTINUOUS INTEGRATION ) , INCLUDING FRONTEND AND BACKEND TESTING HOW TO USE IT GO TO THE DIRECTOY WHERE YOU WANT TO CREATE YOUR PROJECT AND RUN : BASH PIP INSTALL COOKIECUTTER COOKIECUTTER HTTPS : //GITHUB

ROOT->FRAG->.->.
