.. _multi_gate_results:

======================================
Multiple-Gate Circuit: Further Details
======================================

The binary quadratic models created by :doc:`dwavebinarycsp </docs_binarycsp/sdk_index>`
and the embeddings found on a D-Wave 2000Q system for these BQMs.  

Single Comprehensive Constraint
===============================

Binary Quadratic Model::

    BinaryQuadraticModel({'a': 6.0, 'c': -2.0, 'z': 6.0, 'd': 0.0, 'b': -2.0,
    'aux0': 0.0, 'aux1': 0.0}, {('aux1', 'a'): -4.0, ('z', 'a'): 0.0, ('aux1', 'aux0'): 0.0,
    ('z', 'aux1'): -4.0, ('b', 'a'): -2.0, ('d', 'c'): 0.0, ('z', 'c'): -2.0, ('z', 'd'): 0.0,
    ('z', 'aux0'): -4.0, ('z', 'b'): 4.0, ('c', 'a'): -2.0, ('c', 'aux0'): 4.0, ('c', 'b'): 2.0,
    ('d', 'a'): -2.0, ('d', 'aux1'): 4.0, ('d', 'aux0'): -2.0, ('b', 'aux0'): 2.0,
    ('aux0', 'a'): -2.0, ('c', 'aux1'): 2.0, ('b', 'aux1'): 0.0, ('d', 'b'): 0.0},
    -2.5, Vartype.BINARY)

Embedding 1::

  {'a': [946, 951, 959],
   'aux0': [954, 957],
   'aux1': [955, 1083, 1086, 1081, 1080],
   'b': [948, 956],
   'c': [944, 958, 950],
   'd': [953, 825, 831, 824],
   'z': [952]}

Embedding 2::

  {'a': [1104],
   'aux0': [1110, 1102],
   'aux1': [1107, 981, 979, 977, 976],
   'b': [1111, 1103, 1098],
   'c': [1105, 1233, 1232, 1238],
   'd': [1108, 1100, 1099],
   'z': [1106, 1109]}

Embedding 3::

   {'a': [1838, 1846, 1840, 1847],
   'aux0': [1839],
   'aux1': [1836, 1835],
   'b': [1837, 1831, 1829, 1826, 1830],
   'c': [1706, 1834, 1711],
   'd': [1705, 1833, 1709],
   'z': [1704, 1832]}

Embedding 4::

   {'a': [665, 537, 540, 539],
   'aux0': [669, 661, 656],
   'aux1': [664, 668],
   'b': [670, 662, 659],
   'c': [667],
   'd': [666, 794, 798, 793, 795],
   'z': [671, 663]}


Multiple Small Constraints
==========================

Binary Quadratic Model::

    BinaryQuadraticModel({'a': 0.0, 'c': 2.0, 'b': 0.0, 'not1': -2.0, 'd': 2.0,
    'or4': 0.0, 'or2': 4.0, 'not6': 0.0, 'and5': 8.0, 'z': 2.0, 'and3': 6.0},
    {('not6', 'and5'): 2.0, ('or2', 'c'): -4.0, ('or4', 'd'): -4.0, ('or4', 'and3'): 2.0,
    ('and3', 'a'): -4.0, ('and5', 'and3'): -4.0, ('z', 'and5'): -4.0, ('or4', 'not6'): 4.0,
    ('or4', 'or2'): -4.0, ('z', 'not6'): -4.0, ('or2', 'd'): 2.0, ('or4', 'and5'): -4.0,
    ('c', 'b'): 2.0, ('b', 'not1'): 4.0, ('not1', 'and3'): -4.0, ('or2', 'b'): -4.0,
    ('not1', 'a'): 2.0}, -5.5, Vartype.BINARY)


Embedding 1::

  {'a': [1870, 1737, 1862, 1856, 1865, 1609],
  'and3': [1728, 1600],
  'and5': [1731, 1735],
  'b': [1603],
  'c': [1605],
  'd': [1606],
  'not1': [1604, 1612],
  'not6': [1730],
  'or2': [1607, 1602],
  'or4': [1733, 1729, 1601],
  'z': [1734]}

Embedding 2::

  {'a': [578, 450, 452],
  'and3': [448, 576],
  'and5': [447, 455],
  'b': [574, 569],
  'c': [572],
  'd': [444],
  'not1': [582],
  'not6': [442, 446, 454],
  'or2': [440, 568],
  'or4': [441, 445, 453],
  'z': [451]}

Embedding 3::

   {'a': [1051],
  'and3': [1058, 1060, 1052],
  'and5': [1059],
  'b': [921, 924],
  'c': [926],
  'd': [1054],
  'not1': [1049, 1055],
  'not6': [1063, 1056],
  'or2': [922, 1050],
  'or4': [1061, 1053, 1048],
  'z': [1062]}

Embedding 4::

   {'a': [1438],
  'and3': [1560, 1432],
  'and5': [1688, 1695],
  'b': [1561, 1566],
  'c': [1564],
  'd': [1565],
  'not1': [1439, 1433],
  'not6': [1691, 1693],
  'or2': [1563],
  'or4': [1562, 1567, 1690],
  'z': [1694]}
